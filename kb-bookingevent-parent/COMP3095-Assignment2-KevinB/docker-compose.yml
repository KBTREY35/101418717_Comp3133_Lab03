version: '3.9'

services:
  approval-service:
    build:
      context: ./approval-service
      dockerfile: Dockerfile
    ports:
      - "8096:8096"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres-approval:5432/approval_db
      - SPRING_DATASOURCE_USERNAME=admin
      - SPRING_DATASOURCE_PASSWORD=password
      - SPRING_JPA_HIBERNATE_DDL_AUTO=none
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - postgres-approval
    networks:
      - backend

  postgres-approval:
    image: postgres
    container_name: postgres-approval
    ports:
      - "5434:5432"
    environment:
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=approval_db
    volumes:
      - ./data/postgres-approval:/var/lib/postgresql/data
    networks:
      - backend

  user-service:
    build:
      context: ./user-service
      dockerfile: Dockerfile
    ports:
      - "8094:8094"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres-user:5432/user_db
      - SPRING_DATASOURCE_USERNAME=admin
      - SPRING_DATASOURCE_PASSWORD=password
      - SPRING_JPA_HIBERNATE_DDL_AUTO=none
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - postgres-user
    networks:
      - backend

  postgres-user:
    image: postgres
    container_name: postgres-user
    ports:
      - "5433:5432"
    environment:
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=user_db
    volumes:
      - ./data/postgres-user:/var/lib/postgresql/data
    networks:
      - backend

  room-service:
    build:
      context: ./room-service
      dockerfile: Dockerfile
    ports:
      - "8092:8092"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres-room:5432/room_db
      - SPRING_DATASOURCE_USERNAME=admin
      - SPRING_DATASOURCE_PASSWORD=password
      - SPRING_JPA_HIBERNATE_DDL_AUTO=none
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - postgres-room
    networks:
      - backend

  postgres-room:
    image: postgres
    container_name: postgres-room
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=room_db
    volumes:
      - ./data/postgres-room:/var/lib/postgresql/data
    networks:
      - backend

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    ports:
      - "8888:80"
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@gbc.ca
      - PGADMIN_DEFAULT_PASSWORD=password
    depends_on:
      - postgres-room
    networks:
      - backend

  event-service:
    build:
      context: ./event-service
      dockerfile: Dockerfile
    ports:
      - "8095:8095"
    environment:
      - MONGO_DB_USERNAME=admin
      - MONGO_DB_PWD=password
    depends_on:
      - mongodb
    networks:
      - backend

  booking-service:
    build:
      context: ./booking-service
      dockerfile: Dockerfile
    ports:
      - "8093:8093"
    environment:
      - MONGO_DB_USERNAME=admin
      - MONGO_DB_PWD=password
    depends_on:
      - mongodb
    networks:
      - backend

  mongodb:
    image: mongo
    container_name: mongodb
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=password
    volumes:
      - ./data/mongo:/data/db
    networks:
      - backend

  mongo-express:
    image: mongo-express
    container_name: mongo-express
    ports:
      - "8090:8090"
    environment:
      - ME_CONFIG_MONGODB_ADMINUSERNAME=admin
      - ME_CONFIG_MONGODB_ADMINPASSWORD=password
      - ME_CONFIG_MONGODB_SERVER=mongodb
    depends_on:
      - mongodb
    networks:
      - backend

  keycloak:
    container_name: keycloak
    image: quay.io/keycloak/keycloak:21.1.1
    environment:
      DB_VENDOR: postgres
      DB_DATABASE: keycloak
      DB_USER: admin
      DB_PASSWORD: password
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: password
    ports:
      - "8080:8080"
    command: [ "start-dev" ]
    depends_on:
      - postgres-keycloak
    networks:
      - backend


  postgres-keycloak:
    image: postgres
    container_name: postgres-keycloak
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: password
      POSTGRES_DB: keycloak
    ports:
      - "5431:5432"
    volumes:
      - ./data/postgres-keycloak:/var/lib/postgresql/data
    networks:
      - backend

  api-gateway:
    build:
      context: ./api-gateway
      dockerfile: Dockerfile
    container_name: api-gateway
    ports:
      - "8081:8081"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - approval-service
      - booking-service
      - user-service
      - room-service
      - keycloak
    networks:
      - backend

networks:
  backend:
    driver: bridge
